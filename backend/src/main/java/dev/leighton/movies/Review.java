package dev.leighton.movies;

import java.time.LocalDateTime;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.bson.types.ObjectId;
import org.springframework.data.mongodb.core.mapping.Document;

/**
 * This class represents a Review entity in the application.
 * It defines the data structure for movie reviews and maps to documents
 * in the "reviews" collection in MongoDB.
 */
@Document(collection = "reviews") // Specifies the MongoDB collection name this class maps to
@Data // Lombok annotation that automatically generates getters, setters, toString, equals, and hashCode methods
@AllArgsConstructor // Lombok annotation that generates a constructor with all arguments
@NoArgsConstructor // Lombok annotation that generates a no-args constructor required by MongoDB
public class Review {

  /**
   * The primary key generated by MongoDB.
   * ObjectId is MongoDB's default type for primary keys.
   * Unlike in the Movie class, this field is not explicitly marked with @Id annotation,
   * but Spring Data MongoDB will still recognize it as the ID by its name.
   */
  private ObjectId id;

  /**
   * The text content of the review.
   * This contains the reviewer's comments about the movie.
   */
  private String body;

  /**
   * The timestamp when the review was first created.
   * Using Java 8's LocalDateTime for modern date/time handling.
   */
  private LocalDateTime created;

  /**
   * The timestamp when the review was last updated.
   * This allows tracking modifications to reviews over time.
   */
  private LocalDateTime updated;

  /**
   * Custom constructor that allows creating a Review without specifying the ID.
   * This is useful when creating a new Review instance before saving it to the database,
   * as MongoDB will generate the ID automatically.
   *
   * @param body The text content of the review
   * @param created The timestamp when the review was created
   * @param updated The timestamp when the review was last updated
   */
  public Review(String body, LocalDateTime created, LocalDateTime updated) {
    this.body = body;
    this.created = created;
    this.updated = updated;
  }
}
